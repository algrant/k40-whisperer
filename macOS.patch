--- /Users/houser/Downloads/K40_Whisperer-0.29_src/k40_whisperer.py	2019-01-14 18:37:32.000000000 -0500
+++ k40_whisperer.py	2019-01-30 15:10:35.000000000 -0500
@@ -90,9 +90,33 @@
 
 QUIET = False
 
+# macOS Mojave and tikinter buttons are blank
+# https://stackoverflow.com/questions/52529403/button-text-of-tkinter-not-works-in-mojave]
+# Essentially the fix is to slightly resize the window after it opens.
+macOS_button_fix_enabled = False
+
+def macOS_button_fix(win):
+    def make_window_resizer(w):
+        def window_resizer():
+            a = w.winfo_geometry().split('+')[0]
+            (width, height) = a.split('x')
+            w.geometry('%dx%d' % (int(width)+1, int(height)+1))
+
+        return window_resizer
+
+    # The fix causes a bit of flicker on startup, so only run it for macOS >= 10.14
+    # Check for macOS >= 10.14
+    if macOS_button_fix_enabled:
+        try:
+            import platform
+            v, _, _ = platform.mac_ver()
+            v = float('.'.join(v.split('.')[:2]))
+            if v >= 10.14:
+                win.update()
+                win.after(0, make_window_resizer(win))
+        except:
+            pass
 
-    
-    
 ################################################################################
 class Application(Frame):
     def __init__(self, master):
@@ -472,7 +496,13 @@
         self.gotoY.trace_variable("w", self.Entry_GoToY_Callback)
         
         self.Label_GoToX   = Label(self.master,text="X", anchor=CENTER )
-        self.Label_GoToY   = Label(self.master,text="Y", anchor=CENTER )
+        self.Label_GoToY = Label(self.master, text="Y", anchor=CENTER)
+        
+        # Adjust button wrap locations for macOS
+        self.Open_Button.config(wraplength=20)
+        self.Reload_Button.config(wraplength=20)
+        self.Reng_Button.config(text="Raster Eng.")
+        self.Veng_Button.config(text="Vector Eng.")
         ###########################################################################
         # End Left Column #
 
@@ -3131,6 +3161,7 @@
                                   U_display))
 
         self.statusbar.configure( bg = 'white' )
+        macOS_button_fix(root)
         
     def menu_Mode_Change_Callback(self, varName, index, mode):
         self.menu_View_Refresh()
@@ -3863,7 +3894,7 @@
         xd_label_L = 12
 
         w_label=150
-        w_entry=40
+        w_entry=50
         w_units=35
         xd_entry_L=xd_label_L+w_label+10
         xd_units_L=xd_entry_L+w_entry+5
@@ -4005,6 +4036,8 @@
         self.GEN_Close = Button(gen_settings,text="Close",command=self.Close_Current_Window_Click)
         self.GEN_Close.place(x=Xbut, y=Ybut, width=130, height=30, anchor="center")
 
+        macOS_button_fix(gen_settings)
+
     ################################################################################
     #                          Raster Settings Window                              #
     ################################################################################
@@ -4144,6 +4177,7 @@
         self.bezier_M1_Callback()
         self.Set_Input_States_RASTER()
 
+        macOS_button_fix(raster_settings)
 
 
 
@@ -4214,8 +4248,10 @@
             
         self.EGV_Send = Button(egv_send,text="Send EGV Data",command=Close_and_Send_Click)
         self.EGV_Send.place(x=Xbut, y=Ybut, width=130, height=30, anchor="w")
+
+        macOS_button_fix(egv_send)
         ################################################################################
-        
+
         
 ################################################################################
 #             Function for outputting messages to different locations          #
@@ -4337,4 +4373,6 @@
     message_box("K40 Whisperer",LOAD_MSG)
 debug_message("Debuging is turned on.")
 
+macOS_button_fix_enabled = True
+macOS_button_fix(root)
 root.mainloop()
--- /Users/houser/Downloads/K40_Whisperer-0.29_src/windowsinhibitor.py	2019-01-13 21:58:38.000000000 -0500
+++ windowsinhibitor.py	2019-01-29 10:51:44.000000000 -0500
@@ -51,6 +51,6 @@
     while d_time < 20:
         time.sleep(5)
         d_time = time.time()-t_init
-        print d_time
+        print(d_time)
     if osSleep:
         print("stop no sleep = ",osSleep.uninhibit())
